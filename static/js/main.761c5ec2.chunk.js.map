{"version":3,"sources":["index.js"],"names":["ProductCategoryRow","category","this","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","colSpan","React","Component","ProductRow","product","name","stocked","style","color","price","ProductTable","filterText","inStockOnly","rows","lastCategory","products","forEach","indexOf","push","key","SearchBar","_this","Object","C_Users_Nanu_Desktop_Reactjs_searchable_product_data_table_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_Nanu_Desktop_Reactjs_searchable_product_data_table_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Nanu_Desktop_Reactjs_searchable_product_data_table_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleFilterTextChange","bind","C_Users_Nanu_Desktop_Reactjs_searchable_product_data_table_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","handleInStockChange","e","onFilterTextChange","target","value","onInStockChange","checked","type","placeholder","onChange","FilterableProductTable","_this2","state","setState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.761c5ec2.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass ProductCategoryRow extends React.Component {\r\n    render() {\r\n      const category = this.props.category;\r\n      return (\r\n        <tr>\r\n          <th colSpan=\"2\">\r\n            {category}\r\n          </th>\r\n        </tr>\r\n      );\r\n    }\r\n}\r\n  \r\nclass ProductRow extends React.Component {\r\n    render() {\r\n        const product = this.props.product;\r\n        const name = product.stocked ?\r\n            product.name :\r\n            <span style={{color: 'red'}}>\r\n                {product.name}\r\n            </span>;\r\n\r\n        return (\r\n            <tr>\r\n                <td>{name}</td>\r\n                <td>{product.price}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nclass ProductTable extends React.Component {\r\n    render() {\r\n        const filterText = this.props.filterText;\r\n        const inStockOnly = this.props.inStockOnly;\r\n\r\n        const rows = [];\r\n        let lastCategory = null;\r\n\r\n        this.props.products.forEach((product) => {\r\n            if (product.name.indexOf(filterText) === -1) {\r\n                return;\r\n            }\r\n            if (inStockOnly && !product.stocked) {\r\n                return;\r\n            }\r\n            if (product.category !== lastCategory) {\r\n                rows.push(\r\n                    <ProductCategoryRow\r\n                        category={product.category}\r\n                        key={product.category} \r\n                    />\r\n                );\r\n            }\r\n            rows.push(\r\n                <ProductRow\r\n                    product={product}\r\n                    key={product.name}\r\n                />\r\n            );\r\n            lastCategory = product.category;\r\n        });\r\n\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{rows}</tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\r\n        this.handleInStockChange = this.handleInStockChange.bind(this);\r\n    }\r\n\r\n    handleFilterTextChange(e) {\r\n        this.props.onFilterTextChange(e.target.value);\r\n    }\r\n\r\n    handleInStockChange(e) {\r\n        this.props.onInStockChange(e.target.checked);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    value={this.props.filterText}\r\n                    onChange={this.handleFilterTextChange}\r\n                />\r\n                <p>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.props.inStockOnly}\r\n                        onChange={this.handleInStockChange}\r\n                    />\r\n                    {' '}\r\n                    Only show products in stock\r\n                </p>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass FilterableProductTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterText: '',\r\n            inStockOnly: false\r\n        };\r\n        \r\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\r\n        this.handleInStockChange = this.handleInStockChange.bind(this);\r\n    }\r\n\r\n    handleFilterTextChange(filterText) {\r\n        this.setState({\r\n            filterText: filterText\r\n        });\r\n    }\r\n\r\n    handleInStockChange(inStockOnly) {\r\n        this.setState({\r\n            inStockOnly: inStockOnly\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SearchBar\r\n                    filterText={this.state.filterText}\r\n                    inStockOnly={this.state.inStockOnly}\r\n                    onFilterTextChange={this.handleFilterTextChange}\r\n                    onInStockChange={this.handleInStockChange}\r\n                />\r\n                <ProductTable\r\n                    products={this.props.products}\r\n                    filterText={this.state.filterText}\r\n                    inStockOnly={this.state.inStockOnly}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst PRODUCTS = [\r\n    {category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},\r\n    {category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},\r\n    {category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},\r\n    {category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},\r\n    {category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},\r\n    {category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}\r\n];\r\n\r\nReactDOM.render(\r\n    <FilterableProductTable products={PRODUCTS} />,\r\n    document.getElementById('container')\r\n);"],"sourceRoot":""}